module.exports = {
  AUTH_ROLE: {
    AUTHENTICATED: 'authenticated',
    UNAUTHENTICATED: 'unauthenticated',
  },
  AUTH_TRIGGER: {
    CUSTOM_MESSAGE: 'auth-custom-message-trigger',
    PRE_SIGNUP: 'auth-pre-signup-trigger',
  },
  CONTEXT_KEY: {
    AUTH: 'auth',
    NAMESPACE: 'namespace',
    PERMISSIONS: 'permissions',
  },
  DATA_SOURCE_TYPE: {
    DYNAMODB: 'ddb',
    NONE: 'none',
    POSTGRES: 'pg',
  },
  ID_PART: {
    API: 'Api',
    CLUSTER: 'Cluster',
    CUSTOM_RESOURCE: 'CustomResource',
    DATA_SOURCE: 'DataSource',
    DEFAULT_POLICY: 'DefaultPolicy',
    DYNAMO_DB: 'DynamoDb',
    IDENTITIES: 'Identities',
    LAMBDA_ASSET: 'LambdaAsset',
    MIGRATIONS: 'Migrations',
    PERMISSIONS: 'Permissions',
    POLICY: 'Policy',
    POSTGRES: 'Postgres',
    PRIVATE_SUBNET: 'PrivateSubnet',
    PUBLIC_SUBNET: 'PublicSubnet',
    ROLE_ATTACHMENT: 'RoleAttachment',
    ROUTE_TABLE: 'RouteTable',
    SCHEMA: 'Schema',
    SECRET: 'Secret',
    SECURITY_GROUP: 'SecurityGroup',
    SERVICE_ROLE: 'ServiceRole',
    SUBNET: 'Subnet',
    USERS: 'Users',
    VPC: 'Vpc',
    WEB_CLIENT: 'WebClient',
  },
  MAPPING_TEMPLATE_DEFAULT: {
    REQUEST: 'null',
    RESPONSE: '$util.toJson($ctx.result)',
  },
  MAPPING_TEMPLATE_KEY: {
    REQUEST: 'req',
    RESPONSE: 'res',
    SEQUENCE: 'seq',
  },
  PATH: {
    DATABASES_DDB_DIR: `${process.cwd()}/src/databases/ddb`,
    DATABASES_PG_MIGRATIONS_DIR: `${process.cwd()}/src/databases/pg/migrations`,
    DATABASES_PG_MIGRATIONS_LAMBDA: `${__dirname}/../assets/lambdas/postgres-migrations/index.js`,
    LAMBDAS_DIR: `${process.cwd()}/src/lambdas`,
    RESOLVERS_DIR: `${process.cwd()}/src/graphql/resolvers`,
    RESOLVER_FUNCTIONS_DIR: `${process.cwd()}/src/graphql/resolvers/functions`,
    SCHEMA_DEFINITION_FILE: `${process.cwd()}/src/graphql/schema.graphql`,
  },
};
